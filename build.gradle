import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '9.2.2'
}

group = 'com.stardevllc'
version = '0.1.0'

repositories {
    mavenLocal()
    mavenCentral()
}

publishing {
    repositories {
        maven {
            name = "stardev"
            url = "https://repo.stardevllc.com/releases"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }

    publications {
        maven(MavenPublication) {
            from components.shadow
            artifact("build/libs/${project.name}-${project.version}-javadoc.jar") {
                classifier = "javadoc"
            }
            artifact("build/libs/${project.name}-${project.version}-sources.jar") {
                classifier = "sources"
            }
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }

    withJavadocJar()
    withSourcesJar()
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.21.10-R0.1-SNAPSHOT'
    implementation project(':common')
    implementation project(':v1_8')
    implementation project(':v1_9_2')
    implementation project(':v1_13_2')
}

tasks.named('shadowJar', ShadowJar) {
    archiveClassifier = ''
}

tasks.named("javadoc", Javadoc) {
    source = subprojects.collect { subproject ->
        subproject.sourceSets.main.allJava
    }

    classpath = files(subprojects.collect { subproject ->
        subproject.sourceSets.main.compileClasspath
    })
}

tasks.named('sourcesJar', Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource

    subprojects { subproject ->
        from subproject.sourceSets.main.allSource
    }
}

tasks.compileJava.dependsOn(clean)
tasks.jar.finalizedBy(shadowJar)
tasks.build.finalizedBy(publishToMavenLocal)

tasks.withType(PublishToMavenLocal).configureEach {
    dependsOn(shadowJar)
    dependsOn(javadocJar)
    dependsOn(sourcesJar)
}

tasks.withType(PublishToMavenRepository).configureEach {
    dependsOn(shadowJar)
    dependsOn(javadocJar)
    dependsOn(sourcesJar)
}